/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forms;

import conexion.CreateConnection;
import constans.AppConstasQry;
import java.awt.HeadlessException;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import utils.Funciones;

/**
 *
 * @author JairoDev
 */
public class ProductoInternal extends javax.swing.JInternalFrame {

    Connection cn;
    CallableStatement cts;
    ResultSet r;
    CreateConnection conectar = new CreateConnection();
    Vector columnNames;
    Vector data;
    Statement stmt;
    String qry = null;
    /**
     * Creates new form ProductoInternal
     */
    DefaultTableModel modelo = new DefaultTableModel();

    public ProductoInternal() throws SQLException {
        initComponents();
        this.data = new Vector();
        this.columnNames = new Vector();
        initComponents();
        this.stmt = null;
        this.jTableProducto.setModel(modelo);
        cn = conectar.getConnection();
        mostrarDatos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialogProveedor = new javax.swing.JDialog();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableProveedor = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        Salir = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        lblCodigo = new javax.swing.JLabel();
        lblNombre = new javax.swing.JLabel();
        lvlApellido = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        txtDescripcion = new javax.swing.JTextField();
        txtStocMin = new javax.swing.JTextField();
        lblDire = new javax.swing.JLabel();
        txtPro = new javax.swing.JTextField();
        btnNuevo = new javax.swing.JButton();
        btnBuscar = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        txtStock = new javax.swing.JTextField();
        lblNombre1 = new javax.swing.JLabel();
        lvlApellido1 = new javax.swing.JLabel();
        txtPrecio = new javax.swing.JTextField();
        btnProveedor = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableProducto = new javax.swing.JTable();

        jDialogProveedor.setMinimumSize(new java.awt.Dimension(685, 350));
        jDialogProveedor.setModal(true);
        jDialogProveedor.setResizable(false);

        jTableProveedor.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTableProveedor);

        jButton1.setText("Agregar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        Salir.setText("Salir");
        Salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SalirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jDialogProveedorLayout = new javax.swing.GroupLayout(jDialogProveedor.getContentPane());
        jDialogProveedor.getContentPane().setLayout(jDialogProveedorLayout);
        jDialogProveedorLayout.setHorizontalGroup(
            jDialogProveedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialogProveedorLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
            .addGroup(jDialogProveedorLayout.createSequentialGroup()
                .addGap(155, 155, 155)
                .addComponent(jButton1)
                .addGap(184, 184, 184)
                .addComponent(Salir)
                .addContainerGap(214, Short.MAX_VALUE))
        );
        jDialogProveedorLayout.setVerticalGroup(
            jDialogProveedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDialogProveedorLayout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(jDialogProveedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(Salir))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 66, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        setClosable(true);
        setIconifiable(true);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Mantenimiento Empleado", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 12), new java.awt.Color(204, 0, 51))); // NOI18N

        lblCodigo.setText("ID_PRODUCTO");

        lblNombre.setText("Descripcion:");

        lvlApellido.setText("Stock Minimo");

        txtId.setEnabled(false);
        txtId.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtIdKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtIdKeyTyped(evt);
            }
        });

        txtDescripcion.setEnabled(false);
        txtDescripcion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDescripcionKeyTyped(evt);
            }
        });

        txtStocMin.setEnabled(false);
        txtStocMin.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtStocMinKeyTyped(evt);
            }
        });

        lblDire.setText("Proveedor");

        txtPro.setEnabled(false);
        txtPro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtProKeyTyped(evt);
            }
        });

        btnNuevo.setText("Nuevo");
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });

        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        btnGuardar.setText("Guardar");
        btnGuardar.setEnabled(false);
        btnGuardar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnGuardarMouseClicked(evt);
            }
        });
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnModificar.setText("Modificar");
        btnModificar.setEnabled(false);
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        btnEliminar.setText("Eliminar");
        btnEliminar.setEnabled(false);
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnCancelar.setText("Calcelar");
        btnCancelar.setEnabled(false);
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        txtStock.setEnabled(false);
        txtStock.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtStockKeyTyped(evt);
            }
        });

        lblNombre1.setText("Stock");

        lvlApellido1.setText("Precio U");

        txtPrecio.setEnabled(false);
        txtPrecio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPrecioKeyTyped(evt);
            }
        });

        btnProveedor.setText("B");
        btnProveedor.setEnabled(false);
        btnProveedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProveedorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblCodigo)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblNombre)
                                    .addComponent(lvlApellido))
                                .addGap(29, 29, 29)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtStocMin, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(txtId, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtDescripcion, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 129, Short.MAX_VALUE)))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(lvlApellido1)
                                        .addGap(29, 29, 29)
                                        .addComponent(txtPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(lblNombre1)
                                        .addGap(29, 29, 29)
                                        .addComponent(txtStock, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(lblDire)
                                .addGap(159, 159, 159))
                            .addComponent(txtPro, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(btnProveedor)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(btnGuardar)
                        .addComponent(btnModificar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnCancelar)
                    .addComponent(btnBuscar))
                .addGap(14, 14, 14))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblCodigo)
                            .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblNombre)
                            .addComponent(txtDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblNombre1)
                            .addComponent(txtStock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lvlApellido)
                            .addComponent(txtStocMin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lvlApellido1)
                            .addComponent(txtPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtPro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblDire)
                            .addComponent(btnProveedor)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnNuevo)
                            .addComponent(btnBuscar))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnGuardar)
                            .addComponent(btnCancelar))
                        .addGap(18, 18, 18)
                        .addComponent(btnModificar)
                        .addGap(18, 18, 18)
                        .addComponent(btnEliminar)))
                .addContainerGap(52, Short.MAX_VALUE))
        );

        jTableProducto.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTableProducto);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1198, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtIdKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIdKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIdKeyReleased

    private void txtIdKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIdKeyTyped

    }//GEN-LAST:event_txtIdKeyTyped

    private void txtDescripcionKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDescripcionKeyTyped
        Funciones.valCampoTexto(evt);
    }//GEN-LAST:event_txtDescripcionKeyTyped

    private void txtStocMinKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtStocMinKeyTyped
        Funciones.valCampoNit(evt, this.txtStocMin.getText());
        // TODO add your handling code here:
    }//GEN-LAST:event_txtStocMinKeyTyped

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        limpiar();
        obtenerId();
        habilitar();
        btnNuevo.setEnabled(false);
        btnGuardar.setEnabled(true);
        btnBuscar.setEnabled(false);
        btnCancelar.setEnabled(true);
        btnProveedor.setEnabled(true);
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        this.buscarEmpleado();
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnGuardarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnGuardarMouseClicked

    }//GEN-LAST:event_btnGuardarMouseClicked

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        insertarEmpleado();
        mostrarDatos();

    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        this.modificarEmpleado();
    }//GEN-LAST:event_btnModificarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        this.eliminarEmpleado();
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        this.limpiar();
        this.desabilitar();
        this.btnGuardar.setEnabled(false);
        this.btnNuevo.setEnabled(true);
        this.btnCancelar.setEnabled(false);
        this.btnBuscar.setEnabled(true);
        this.btnEliminar.setEnabled(false);
        this.btnModificar.setEnabled(false);
        this.btnProveedor.setEnabled(false);
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void txtStockKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtStockKeyTyped
        Funciones.valCampoNit(evt, this.txtStock.getText());
    }//GEN-LAST:event_txtStockKeyTyped

    private void txtPrecioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPrecioKeyTyped
        Funciones.valCampoNit(evt, this.txtPrecio.getText());
    }//GEN-LAST:event_txtPrecioKeyTyped

    private void btnProveedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProveedorActionPerformed
        try {
            mostrarProveedores();

        } catch (Exception e) {

        }
    }//GEN-LAST:event_btnProveedorActionPerformed

    private void txtProKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtProKeyTyped
        Funciones.valCampoNit(evt, this.txtPro.getText());
    }//GEN-LAST:event_txtProKeyTyped

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       try{
           if(Funciones.obtenerIdTable(jTableProveedor).equals("1")){
               JOptionPane.showMessageDialog(this, "Seleccione una Fila!!", "Atencion", JOptionPane.INFORMATION_MESSAGE);
           }else{
               this.txtPro.setText(Funciones.obtenerIdTable(jTableProveedor));
               this.jDialogProveedor.dispose();
           }
       }catch(HeadlessException e){
           
       }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void SalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SalirActionPerformed
       try{
           this.jDialogProveedor.dispose();
       }catch(Exception e){
           
       }
    }//GEN-LAST:event_SalirActionPerformed
    private void mostrarProveedores() {
        try {
            DefaultTableModel model = new DefaultTableModel();

            model.addColumn("ID_PROVEEDOR");
            model.addColumn("EMPRESA");
            model.addColumn("DIRECCION");

            stmt = cn.createStatement();
            qry = "Select ID_PROVEEDOR, EMPRESA, DIRECCION FROM PROVEEDOR where ESTATUS='1' ORDER BY ID_PROVEEDOR";
            ResultSet rs = stmt.executeQuery(qry);
            while (rs.next()) {
                Object[] fila = new Object[model.getColumnCount()];
                for (int i = 0; i < fila.length; i++) {
                    fila[i] = rs.getString(i + 1);
                }
                model.addRow(fila);
            }
            this.jTableProveedor.setModel(model);

        } catch (SQLException e) {

        }
        this.jDialogProveedor.setLocationRelativeTo(null);
        this.jDialogProveedor.show();
    }

    private void obtenerId() {
        try {

            stmt = cn.createStatement();
            qry = AppConstasQry.qryMaxEmpleado;
            r = stmt.executeQuery(qry);

            if (r.next()) {
                txtId.setText(r.getString(1));
            }
        } catch (SQLException e) {
        }
    }

    private void mostrarDatos() {
        DefaultTableModel model = new DefaultTableModel();

        model.addColumn("ID_PRODUCTO");
        model.addColumn("DESCRIPCION");
        model.addColumn("STOCK");
        model.addColumn("STOCK_MIN");
        model.addColumn("PRECIO U");
        model.addColumn("ID_PROVEEDOR");

        try {
            stmt = cn.createStatement();
            qry = "Select * FROM PRODUCTO where ESTADO='1' ORDER BY ID_PRODUCTO";
            ResultSet rs = stmt.executeQuery(qry);
            while (rs.next()) {
                Object[] fila = new Object[model.getColumnCount()];
                for (int i = 0; i < fila.length; i++) {

                    fila[i] = rs.getString(i + 1);

                }
                model.addRow(fila);
            }
            this.jTableProducto.setModel(model);
        } catch (SQLException ex) {
        }
    }

    private void insertarEmpleado() {
        String id = txtId.getText(), descripcion = txtDescripcion.getText(), stock = txtStock.getText(), stockMin = txtStocMin.getText();
        String precio = txtPrecio.getText(), idPro = txtPro.getText();

        try {
            cts = cn.prepareCall("{call INSERTAR_PRODUCTO(?,?,?,?,?,?,?)}");
            cts.setInt(1, Integer.parseInt(id));
            cts.setString(2, descripcion);
            cts.setInt(3, Integer.parseInt(stock));
            cts.setString(4, stockMin);
            cts.setFloat(5, Float.parseFloat(precio));
            cts.setInt(6, Integer.parseInt(idPro));
            cts.setInt(7, 1);

            int rpta = cts.executeUpdate();
            if (rpta == 1) {
                JOptionPane.showMessageDialog(this, "Producto Registrado correctamente!!", "Atencion", JOptionPane.INFORMATION_MESSAGE);

            }
            desabilitar();
            limpiar();
            btnNuevo.setEnabled(true);
            btnGuardar.setEnabled(false);
            btnBuscar.setEnabled(true);
            this.btnCancelar.setEnabled(false);
            this.btnProveedor.setEnabled(false);
        } catch (HeadlessException | NumberFormatException | SQLException e) {
            JOptionPane.showMessageDialog(this, e.toString());
        }
    }

    private void buscarEmpleado() {
        String cod = JOptionPane.showInputDialog("INGRESE EL CODIGO DEL PRODUCTO A BUSCAR");
        try {
            stmt = cn.createStatement();
            qry = "SELECT ID_PRODUCTO,DESCRIPCION,STOCK,STOCK_MINIMO,PRECIO_UNITARIO,ID_PROVEEDOR"
                    + " FROM USUARIO_JAVA.PRODUCTO"
                    + " WHERE ID_PRODUCTO = " + Integer.parseInt(cod) + " AND ESTADO=1";
            r = stmt.executeQuery(qry);

            if (r.next()) {
                JOptionPane.showMessageDialog(this, "producto Encontrado!!", "Aviso", JOptionPane.INFORMATION_MESSAGE);
                this.txtId.setText(r.getString(1));
                this.txtDescripcion.setText(r.getString(2));
                this.txtStock.setText(r.getString(3));
                this.txtStocMin.setText(r.getString(4));
                this.txtPrecio.setText(r.getString(5));
                this.txtPro.setText(r.getString(6));

                this.btnNuevo.setEnabled(false);
                this.btnGuardar.setEnabled(false);
                this.btnBuscar.setEnabled(false);
                this.btnModificar.setEnabled(true);
                this.btnEliminar.setEnabled(true);
                this.btnCancelar.setEnabled(true);
                this.btnProveedor.setEnabled(true);
                habilitar();
            } else {
                JOptionPane.showMessageDialog(this, "producto  No Encontrado!!", "Aviso", JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (HeadlessException | NumberFormatException | SQLException e) {
            JOptionPane.showMessageDialog(this, e.toString());
        }
    }

    private void modificarEmpleado() {
        String id = txtId.getText(), descripcion = txtDescripcion.getText(), stock = txtStock.getText(), stockMin = txtStocMin.getText();
        String precio = txtPrecio.getText(), idPro = txtPro.getText();

        try {
            cts = cn.prepareCall("{call ACTUALIZAR_PRODUCTO(?,?,?,?,?,?,?)}");
            cts.setInt(1, Integer.parseInt(id));
            cts.setString(2, descripcion);
            cts.setInt(3, Integer.parseInt(stock));
            cts.setString(4, stockMin);
            cts.setFloat(5, Float.parseFloat(precio));
            cts.setInt(6, Integer.parseInt(idPro));
            cts.setInt(7, 1);
            int rpta = cts.executeUpdate();
            if (rpta == 1) {
                JOptionPane.showMessageDialog(this, "Producto Modificado", "Aviso", JOptionPane.INFORMATION_MESSAGE);
                limpiar();
                desabilitar();
                this.btnBuscar.setEnabled(true);
                this.btnNuevo.setEnabled(true);
                this.btnModificar.setEnabled(false);
                this.btnEliminar.setEnabled(false);
                this.btnCancelar.setEnabled(false);
                this.btnProveedor.setEnabled(false);
                mostrarDatos();
            } else {

                JOptionPane.showMessageDialog(this, "Error al modificar", "Aviso", JOptionPane.INFORMATION_MESSAGE);
            }

        } catch (HeadlessException | NumberFormatException | SQLException e) {
            JOptionPane.showMessageDialog(this, e.toString());
        }
    }

    private void eliminarEmpleado() {
        String cod = this.txtId.getText();
        try {
            cts = cn.prepareCall("{call ELIMINAR_PRODUCTO(?,?)}");
            cts.setInt(1, Integer.parseInt(cod));
            cts.setInt(2, 0);
            int rpta = cts.executeUpdate();

            if (rpta == 1) {
                JOptionPane.showMessageDialog(this, "PRODUCTO Eliminado", "Aviso", JOptionPane.INFORMATION_MESSAGE);

                limpiar();
                desabilitar();
                this.btnBuscar.setEnabled(true);
                this.btnNuevo.setEnabled(true);
                this.btnModificar.setEnabled(false);
                this.btnEliminar.setEnabled(false);
                this.btnCancelar.setEnabled(false);
                mostrarDatos();
            } else {
                JOptionPane.showMessageDialog(this, "PRODUCTO No Eliminado", "Aviso", JOptionPane.INFORMATION_MESSAGE);

            }

        } catch (SQLException | HeadlessException e) {
            JOptionPane.showMessageDialog(this, e);
        }
    }

    private void limpiar() {
        this.txtId.setText("");
        this.txtDescripcion.setText("");
        this.txtStock.setText("");
        this.txtStocMin.setText("");
        this.txtPrecio.setText("");
        this.txtPro.setText("");

    }

    private void habilitar() {
        this.txtId.setEnabled(false);
        this.txtDescripcion.setEnabled(true);
        this.txtStock.setEnabled(true);
        this.txtStocMin.setEnabled(true);
        this.txtPrecio.setEnabled(true);
        this.txtPro.setEnabled(true);

    }

    private void desabilitar() {
        this.txtId.setEnabled(false);
        this.txtDescripcion.setEnabled(false);
        this.txtStock.setEnabled(false);
        this.txtStocMin.setEnabled(false);
        this.txtPrecio.setEnabled(false);
        this.txtPro.setEnabled(false);

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Salir;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JButton btnProveedor;
    private javax.swing.JButton jButton1;
    private javax.swing.JDialog jDialogProveedor;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTableProducto;
    private javax.swing.JTable jTableProveedor;
    private javax.swing.JLabel lblCodigo;
    private javax.swing.JLabel lblDire;
    private javax.swing.JLabel lblNombre;
    private javax.swing.JLabel lblNombre1;
    private javax.swing.JLabel lvlApellido;
    private javax.swing.JLabel lvlApellido1;
    private javax.swing.JTextField txtDescripcion;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtPrecio;
    private javax.swing.JTextField txtPro;
    private javax.swing.JTextField txtStocMin;
    private javax.swing.JTextField txtStock;
    // End of variables declaration//GEN-END:variables
}
